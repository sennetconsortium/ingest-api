# The only change needed is to comment out the user nginx; line
# to avoid a warning since this directive is only meaningfull when Nginx is running as root
# user  nginx;

# Set this as the number of CPU cores available on the machine
worker_processes  32;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    # Used by workspaces websocket connection upgrade - 5/16/2022
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # Port 80 on host maps to 8080 on container
    server {
        listen 8080;
        root /usr/share/nginx/html;

        # We need this logging for inspecting auth requests from other internal services
        # Logging to the mounted volume for outside container access
        access_log /usr/src/app/log/nginx_access_ingest-api.log;
        error_log /usr/src/app/log/nginx_error_ingest-api.log warn;

        # Set file upload size liit to 10M, default is 1M.
        client_max_body_size 10M;

        location = /favicon.ico {
            alias /usr/share/nginx/html/favicon.ico;
        }
        location / {
            include uwsgi_params;
            # Once authenticated/authorized, pass requests to the uWSGI server using the "uwsgi" protocol on port 5000
            include uwsgi_params;
            uwsgi_read_timeout 300;
            # We have to use localhost because the ingest API is running on the same container
            uwsgi_pass uwsgi://localhost:5000;
        }
    }
}
