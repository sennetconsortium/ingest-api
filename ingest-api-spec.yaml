openapi: 3.0.0
info:
  description: |
    A RESTful web service exposing calls needed for the SenNet Data Sharing Portal.
  version: 1.2.21
  title: SenNet Ingest API
  contact:
    name: SenNet Help Desk
    email: help@sennetconsortium.org
  license:
    name: MIT License
    url: 'https://github.com/sennetconsortium/ingest-api/blob/main/LICENSE'
servers:
  - url: 'https://ingest.api.sennetconsortium.org'
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Globus Bearer token to authorize requests

  schemas:
    file_info:
      type: object
      required:
        - filename
        - file_uuid
      properties:
        filename:
          type: string
        file_uuid:
          type: string

    file_uuid:
      type: string

    Sources:
      type: object
      properties:
        "1":
          $ref: '#/components/schemas/Source'
        "2":
          $ref: '#/components/schemas/Source'
        "3":
          $ref: '#/components/schemas/Source'

    Source:
      type: object
      properties:
        created_timestamp:
          type: integer
          readOnly: true
          description: The timestamp of when the node was created. The format is an integer representing milliseconds since midnight Jan 1, 1970
        created_by_user_displayname:
          type: string
          readOnly: true
          description: The name of the person or process authenticated when creating the object
        created_by_user_email:
          type: string
          readOnly: true
          description: The email address of the person or process authenticated when creating the object.
        created_by_user_sub:
          type: string
          readOnly: true
          description: The subject id as provided by the authorization mechanism for the person or process authenticated when creating the object.
        uuid:
          type: string
          readOnly: true
          description: The SenNet unique identifier, intended for internal software use only. This is a 32 digit hexadecimal UUID e.g. 461bbfdc353a2673e381f632510b0f17
        sennet_id:
          type: string
          readOnly: true
          description: A SenNet Consortium wide unique identifier randomly generated in the format SNT###.ABCD.### for every Entity.
        last_modified_timestamp:
          type: integer
          readOnly: true
          description: The timestamp of when the object was last modified. The format is an integer representing milliseconds since midnight, Jan 1, 1970
        last_modified_user_sub:
          type: string
          readOnly: true
          description: The subject id of the user who last modified the Entity as provided by the authorization mechanism for the person or process authenticated when the object was modified.
        last_modified_user_email:
          type: string
          readOnly: true
          description: The email address of the person or process which authenticated when the object was last modified.
        last_modified_user_displayname:
          type: string
          readOnly: true
          description: The name of the person or process which authenticated when the object was last modified.
        entity_type:
          type: string
          readOnly: true
          description: 'Source'
        description:
          type: string
          description: Free text description of the source
        data_access_level:
          type: string
          readOnly: true
          enum:
            - consortium
            - public
          description: 'One of the values: public, consortium'
        lab_source_id:
          type: string
          description: A lab specific identifier for the source.
        group_uuid:
          type: string
          description: The UUID of globus group which the user who created this Entity is a member of. This is required on Create/POST if the user creating the Source is a member of more than one write group. This property cannot be set via PUT (only on Create/POST).
        group_name:
          readOnly: true
          type: string
          description: The displayname of globus group which the user who created this Entity is a member of
        source_type:
          type: string
          enum:
            - Human
            - Human Organoid
            - Mouse
            - Mouse Organoid
          description: "A high level description of where this source originates from. Valid values found in: [source types](https://ontology.api.hubmapconsortium.org/valueset?parent_sab=SENNET&parent_code=C050020&child_sabs=SENNET)"

    Samples:
      type: object
      properties:
        "1":
          $ref: '#/components/schemas/Sample'
        "2":
          $ref: '#/components/schemas/Sample'
        "3":
          $ref: '#/components/schemas/Sample'

    Sample:
      type: object
      properties:
        created_timestamp:
          type: integer
          readOnly: true
          description: The timestamp of when the node was created. The format is an integer representing milliseconds since midnight Jan 1, 1970
        created_by_user_displayname:
          type: string
          readOnly: true
          description: The name of the person or process authenticated when creating the object
        created_by_user_email:
          type: string
          readOnly: true
          description: The email address of the person or process authenticated when creating the object.
        created_by_user_sub:
          type: string
          readOnly: true
          description: The subject id as provided by the authorization mechanism for the person or process authenticated when creating the object.
        uuid:
          type: string
          readOnly: true
          description: The SenNet unique identifier, intended for internal software use only. This is a 32 digit hexadecimal UUID e.g. 461bbfdc353a2673e381f632510b0f17
        sennet_id:
          type: string
          readOnly: true
          description: A SenNet Consortium wide unique identifier randomly generated in the format SNT###.ABCD.### for every Entity.
        last_modified_timestamp:
          type: integer
          readOnly: true
          description: The timestamp of when the object was last modified. The format is an integer representing milliseconds since midnight, Jan 1, 1970
        last_modified_user_sub:
          type: string
          readOnly: true
          description: The subject id of the user who last modified the Entity as provided by the authorization mechanism for the person or process authenticated when the object was modified.
        last_modified_user_email:
          type: string
          readOnly: true
          description: The email address of the person or process which authenticated when the object was last modified.
        last_modified_user_displayname:
          type: string
          readOnly: true
          description: The name of the person or process which authenticated when the object was last modified.
        entity_type:
          type: string
          readOnly: true
          description: 'Sample'
        description:
          type: string
          description: Free text description of the source
        data_access_level:
          type: string
          readOnly: true
          enum:
            - consortium
            - public
          description: 'One of the values: public, consortium'
        lab_source_id:
          type: string
          description: A lab specific identifier for the source.
        group_uuid:
          type: string
          description: The uuid of globus group which the user who created this Entity is a member of. This is required on Create/POST if the user creating the Source is a member of more than one write group. This property cannot be set via PUT (only on Create/POST).
        group_name:
          readOnly: true
          type: string
          description: The displayname of globus group which the user who created this Entity is a member of
        sample_category:
          type: string
          enum:
            - Block
            - Organ
            - Section
            - Suspension
          description: "The category of the sample. Valid values found in: [sample categories](https://ontology.api.hubmapconsortium.org/valueset?parent_sab=SENNET&parent_code=C020076&child_sabs=SENNET)"
        organ:
          type: string
          enum:
            - AD
            - BD
            - BM
            - BR
            - BS
            - LK
            - RK
            - LI
            - LV
            - LL
            - RL
            - LN
            - MU
            - LO
            - RO
            - PA
            - PL
            - SK
          description: "Organ code specifier, only set if `sample_category` is organ. Valid values found in: [organ types](https://ontology.api.hubmapconsortium.org/organs?application_context=sennet)"

    Datasets:
      type: object
      properties:
        "1":
          $ref: '#/components/schemas/Dataset'
        "2":
          $ref: '#/components/schemas/Dataset'
        "3":
          $ref: '#/components/schemas/Dataset'

    Dataset:
      type: object
      properties:
        created_timestamp:
          type: integer
          readOnly: true
          description: The timestamp of when the node was created. The format is an integer representing milliseconds since midnight Jan 1, 1970
        created_by_user_displayname:
          type: string
          readOnly: true
          description: The name of the person or process authenticated when creating the object
        created_by_user_email:
          type: string
          readOnly: true
          description: The email address of the person or process authenticated when creating the object.
        created_by_user_sub:
          type: string
          readOnly: true
          description: The subject id as provided by the authorization mechanism for the person or process authenticated when creating the object.
        uuid:
          type: string
          readOnly: true
          description: The SenNet unique identifier, intended for internal software use only. This is a 32 digit hexadecimal UUID e.g. 461bbfdc353a2673e381f632510b0f17
        sennet_id:
          type: string
          readOnly: true
          description: A SenNet Consortium wide unique identifier randomly generated in the format SNT###.ABCD.### for every Entity.
        last_modified_timestamp:
          type: integer
          readOnly: true
          description: The timestamp of when the object was last modified. The format is an integer representing milliseconds since midnight, Jan 1, 1970
        last_modified_user_sub:
          type: string
          readOnly: true
          description: The subject id of the user who last modified the Entity as provided by the authorization mechanism for the person or process authenticated when the object was modified.
        last_modified_user_email:
          type: string
          readOnly: true
          description: The email address of the person or process which authenticated when the object was last modified.
        last_modified_user_displayname:
          type: string
          readOnly: true
          description: The name of the person or process which authenticated when the object was last modified.
        entity_type:
          type: string
          readOnly: true
          description: 'Dataset'
        description:
          type: string
          description: Free text description of the dataset
        data_access_level:
          type: string
          readOnly: true
          enum:
            - public
            - consortium
          description: 'One of the values: public, consortium.'
        contains_human_genetic_sequences:
          type: boolean
          description: True if the data contains any human genetic sequence information. Can only be set at CREATE/POST time
        status:
          type: string
          enum:
            - New
            - Processing
            - QA
            - Published
            - Error
            - Hold
            - Invalid
          description: 'One of: New|Processing|QA|Published|Error|Hold|Invalid'
        data_types:
          type: array
          items:
            type: string
            enum:
              - 10x-multiome
              - bulk-RNA
              - CITE-Seq
              - CODEX
              - codex_cytokit
              - codex_cytokit_v1
              - CosMX (RNA)
              - DBiT-seq
              - FACS - Fluorescence-activated Cell Sorting
              - GeoMX (RNA)
              - image_pyramid
              - LC-MS
              - Lightsheet
              - MIBI
              - mibi_deepcell
              - Mint-ChIP
              - publication
              - publication_ancillary
              - salmon_rnaseq_10x
              - salmon_rnaseq_bulk
              - salmon_sn_rnaseq_10x
              - SASP
              - scRNA-seq
              - sn_atac_seq
              - snATAC-seq
              - snRNA-seq
              - snRNAseq-10xGenomics-v3
              - Stained Slides
              - Visium
          description: The data or assay types contained in this dataset as a json array of strings. Each is an assay code from [assay types](https://ontology.api.hubmapconsortium.org/datasets?application_context=Sennet).
        local_directory_rel_path:
          type: string
          readOnly: true
          description: The path on the local HIVE file system, relative to the base data directory, where the data is stored.
        group_uuid:
          type: string
          description: The UUID of globus group which the user who created this Entity is a member of. This is required on Create/POST if the user creating the Source is a member of more than one write group.  This property cannot be set via PUT (only on Create/POST).
        group_name:
          type: string
          readOnly: true
          description: The displayname of globus group which the user who created this Entity is a member of

paths:
  /datasets:
    post:
      tags:
        - datasets
      summary: Creates a new SenNet Dataset.
      operationId: addDataset
      responses:
        "201":
          description: Successful created
        "400":
          description: Missing data that is required to create a new Dataset or a system error occurred
        "401":
          description: User is not authorized to create datasets or user's group information cannot be determined
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dataset"
          application/xml:
            schema:
              $ref: "#/components/schemas/Dataset"
        description: Dataset object that needs to be created
        required: true

  /file-upload:
    post:
      tags:
        - files
      summary: "Upload a file to temporarily stage. On success the file will be staged and a temporary ID will be returned to reference the staged file. The temporary ID can be used in the `/file-commit` endpoint for Sources and Samples to commit the file permanantly and associate it with an Entity." 
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: The file was successfully uploaded and staged, the temporary file ID is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  temp_file_id:
                    type: string
        "400":
          description: Missing file
        "401":
          description: The user's token has expired or the user did not supply a valid token
        "403":
          description: The user is not authorized to upload the file.
        "500":
          description: Internal error

  /file-commit:
    post:
      tags:
        - files
      summary: "File commit triggered by the Entity API trigger method for Source/Sample/Dataset. Source: image files. Sample: image files and metadata files. Dataset: only the one thumbnail file. This call also creates the symbolic link from the file UUID directory under the uploads assets directory, so the uploaded files can be exposed via Globus's file assets service." 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                temp_file_id:
                  type: string
                entity_uuid:
                  type: string
                user_token:
                  type: string
      responses:
        "200":
          description: The file was successfully commited, the file UUID is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  filename:
                    type: string
                  file_uuid:
                    type: string
        "400":
          description: Missing JSON input
        "401":
          description: The user's token has expired or the user did not supply a valid token
        "500":
          description: Internal error

  /file-remove:
    post:
      tags:
        - files
      summary: "File removal triggered by Entity API trigger method for Source and Sample during Entity update. Source/Sample/Dataset. Source: image files. Sample: image files and metadata files. Dataset: only the one thumbnail file." 
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                entity_uuid:
                  type: string
                file_uuids:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_uuid'
                files_info_list:
                  type: array
                  items:
                    $ref: '#/components/schemas/file_info'

      responses:
        "200":
          description: The file was successfully deleted.
        "400":
          description: Missing JSON input
        "401":
          description: The user's token has expired or the user did not supply a valid token
        "500":
          description: Internal error

  /sources/bulk/validate:
    post:
      tags:
        - sources
      summary: "Upload a tsv file containing multiple Source records. On success, the file will be staged and a temporary ID will be returned to reference the staged file. Each record in the tsv is validated to verify that it contains acceptable values for a Source and all necessary fields are included. The temporary ID is only provided if all Source records in the tsv are valid."
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: File uploaded, temporary directory and temporary ID created
          content:
            application/json:
              schema:
                properties:
                  temp_id:
                    type: string
                    example: abcdefghij0123456789
        "400":
          description: File not upload, failed, or file contains invalid Sources
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
        "401":
          description: The user's token has expired or the user did not have authorization
        "500":
          description: Internal error

  /sources/bulk/register:
    post:
      tags:
        - sources
      summary: "Confirm that you want to create Sources from the previously uploaded tsv file. Sources are validated once more and, if valid, new Sources are created via the Entity API"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                temp_id:
                  type: string
                  example: abcdefghij0123456789
                group_uuid:
                  type: string
                  example: a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6
      responses:
        "200":
          description: The Sources in the tsv file were successfully created. This response contains a property named `description`. Description is an object of created Sources where the property name is the order in the file ("1", "2", etc...) and the value is the Source object.
          content:
            application/json:
              schema:
                properties:
                  description:
                    type: object
                    description: An object of created Sources where the property name is the order in the file ("1", "2", etc...) and the value is a Source object
                    $ref: '#/components/schemas/Sources'
                  code:
                    type: integer
                    description: The status code of the response
                  name:
                    type: string
                    description: Status message. OK for a successful response
        "400":
          description: File not found for given temporary ID
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
        "401":
          description: The user's token has expired or the user did not have authorization
        "500":
          description: Internal error

  /samples/bulk/validate:
    post:
      tags:
        - samples
      summary: "Upload a tsv file containing multiple Sample records. On success, the file will be staged and a temporary ID will be returned to reference the staged file. Each record in the tsv is validated to verify that it contains acceptable values for a Sample and all necessary fields are included. The temporary ID is only provided if all Sample records in the tsv are valid."
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: File uploaded, temporary directory and temporary ID created
          content:
            application/json:
              schema:
                properties:
                  temp_id:
                    type: string
                    example: abcdefghij0123456789
        "400":
          description: File not upload, failed, or file contains invalid Samples
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
        "401":
          description: The user's token has expired or the user did not have authorization
        "500":
          description: Internal error

  /samples/bulk/register:
    post:
      tags:
        - samples
      summary: "Confirm that you want to create Samples from the previously uploaded tsv file. Samples are validated once more and, if valid, new Samples are created via the Entity API"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                temp_id:
                  type: string
                  example: abcdefghij0123456789
                group_uuid:
                  type: string
                  example: a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6
      responses:
        "200":
          description: The Samples in the tsv file were successfully created. This response contains a property named `description`. Description is an object of created Samples where the property name is the order in the file ("1", "2", etc...) and the value is the Sample object.
          content:
            application/json:
              schema:
                properties:
                  description:
                    type: object
                    description: An object of created Samples where the property name is the order in the file ("1", "2", etc...) and the value is a Sample object
                    $ref: '#/components/schemas/Samples'
                  code:
                    type: integer
                    description: The status code of the response
                  name:
                    type: string
                    description: Status message. OK for a successful response
        "400":
          description: File not found for given temporary ID
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
        "401":
          description: The user's token has expired or the user did not have authorization
        "500":
          description: Internal error

  /datasets/bulk/validate:
    post:
      tags:
        - datasets
      summary: "Upload a tsv file containing multiple Dataset records. On success, the file will be staged and a temporary ID will be returned to reference the staged file. Each record in the tsv is validated to verify that it contains acceptable values for a Dataset and all necessary fields are included. The temporary ID is only provided if all Dataset records in the tsv are valid."
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: File uploaded, temporary directory and temporary ID created
          content:
            application/json:
              schema:
                properties:
                  temp_id:
                    type: string
                    example: abcdefghij0123456789
        "400":
          description: File not upload, failed, or file contains invalid Datasets
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
        "401":
          description: The user's token has expired or the user did not have authorization
        "500":
          description: Internal error

  /datasets/bulk/register:
    post:
      tags:
        - datasets
      summary: "Confirm that you want to create Datasets from the previously uploaded tsv file. Datasets are validated once more and, if valid, new Datasets are created via the Entity API"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                temp_id:
                  type: string
                  example: abcdefghij0123456789
                group_uuid:
                  type: string
                  example: a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6
      responses:
        "200":
          description: The Datasets in the tsv file were successfully created. This response contains a property named `description`. Description is an object of created Datasets where the property name is the order in the file ("1", "2", etc...) and the value is the Datasets object.
          content:
            application/json:
              schema:
                properties:
                  description:
                    type: object
                    description: An object of created Datasets where the property name is the order in the file ("1", "2", etc...) and the value is a Dataset object
                    $ref: '#/components/schemas/Datasets'
                  code:
                    type: integer
                    description: The status code of the response
                  name:
                    type: string
                    description: Status message. OK for a successful response
        "400":
          description: File not found for given temporary ID
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
        "401":
          description: The user's token has expired or the user did not have authorization
        "500":
          description: Internal error

  /uploads/{identifier}/validate:
    put:
      tags:
        - uploads
      summary: Validate an upload.
      operationId: validateUpload
      parameters:
        - name: identifier
          in: path
          description: The unique identifier of Upload. This identifier needs to be a valid SenNet ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: There was a system error or an error in the data submitted
        "401":
          description: User's token is not valid
        "500":
          description: An unexpected error occured

  /uploads/{identifier}/reorganize:
    put:
      tags:
        - uploads
      summary: Reorganize an upload. Creates Datasets from the Upload
      operationId: reorganizeUpload
      parameters:
        - name: identifier
          in: path
          description: The unique identifier of Upload. This identifier needs to be a valid SenNet ID.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
        "400":
          description: There was a system error or an error in the data submitted
        "401":
          description: User's token is not valid
        "500":
          description: An unexpected error occured
